@page "/PolybiusPage"
@rendermode InteractiveServer

<h1>Polybius</h1>

<div class="boxes">
    <div class="box">
        <p>Plaintext: </p>
        <textarea class="submission" @bind=plaintext @bind:event="oninput"></textarea>
    </div>
    <div class="box">
        <p>Ciphertext: </p>
        <textarea class="submission" @bind=ciphertext @bind:event="oninput"></textarea>
    </div>
    <div class="box">
        <p>Key: </p>
        <textarea class="submission" @bind=keyInput @bind:event="oninput"></textarea>
    </div>

</div>

<p>@errors</p>

<button @onclick="encryptButton">ENCRYPT</button>
<button @onclick="decryptButton">DECRYPT</button>


@code {
    string plaintext = "";
    string keyInput = "";
    string errors = "";
    char[,] key = new char[5,5];
    string ciphertext = "";

    bool getkey()
    {
        errors = "";
        plaintext = plaintext.ToLower();
        ciphertext = ciphertext.ToLower();
        keyInput = keyInput.ToLower();

        if(keyInput.Length == 25)
        {
            for (int i = 0; i < 25; i++)
            {
                key[i % 5, i / 5] = keyInput[i];
            }
            return true;
        }
        errors = "The key must be 25 letters long, as in a 5x5 grid. It must be one string, with no spaces, commas or line breaks.";
        return false;
    }

    void encryptButton()
    {
        if(getkey())
        {
            ciphertext = Polybius.Encrypt(plaintext, key);
        }        
    }

    void decryptButton()
    {
        if(getkey())
        {
            plaintext = Polybius.Decrypt(ciphertext, key);
        }
        
    }
}
