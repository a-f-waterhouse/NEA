@page "/vigenerePage"
@rendermode InteractiveServer

<PageTitle>Vigenere</PageTitle>

<h1>Vigenere</h1>

<p>Plaintext: </p>
<textarea class="submission" @bind=plaintext @bind:event="oninput"></textarea>
<br>
<p>Ciphertext: </p>
<textarea class="submission" @bind=ciphertext @bind:event="oninput"></textarea>
<br>
<p>Enter key: </p>
<textarea class="submission" @bind=key @bind:event="oninput"></textarea>
<br />
<p>@errors</p>
<button @onclick="Encrypt">ENCRYPT</button>
<button @onclick="Decrypt">DECRYPT</button>
<button @onclick="calculateKeyLength">KEYLENGTH</button>
<br />

<p>@keyLength</p>

@code {
    string plaintext = "";
    string key = "";
    string ciphertext = "";
    string errors = "";
    int keyLength = 0;

    void Encrypt()
    {
        if (ValidKey())
        {
            ciphertext = Vigenere.Encrypt(key, plaintext);
        }       

    }

    void Decrypt()
    {
        if(ValidKey())
        {
            plaintext = Vigenere.Decrypt(key, ciphertext);
        }        
    }

    bool ValidKey()
    {
        plaintext = plaintext.ToLower();
        ciphertext = ciphertext.ToLower();
        string check = "";
        foreach (char c in key)
        {
            if (!check.Contains(c) && CipherMathsFunctions.isLetter(c))
            {
                check += c;
            }
            else if (check.Contains(c))
            {
                errors = "Cannot have duplicate letters in the key.";
                return false;
            }
            else
            {
                errors = "Key must only be made up of letters.";
                return false;
            }
        }
        return true;
    }

    void calculateKeyLength()
    {
        keyLength = Vigenere.KeyLength(ciphertext);
    }

    

}
